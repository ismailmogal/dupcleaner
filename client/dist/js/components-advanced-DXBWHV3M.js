var e=Object.defineProperty,s=Object.defineProperties,a=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable,r=(s,a,l)=>a in s?e(s,a,{enumerable:!0,configurable:!0,writable:!0,value:l}):s[a]=l,n=(e,s)=>{for(var a in s||(s={}))t.call(s,a)&&r(e,a,s[a]);if(l)for(var a of l(s))i.call(s,a)&&r(e,a,s[a]);return e},c=(e,l)=>s(e,a(l)),d=(e,s,a)=>new Promise((l,t)=>{var i=e=>{try{n(a.next(e))}catch(s){t(s)}},r=e=>{try{n(a.throw(e))}catch(s){t(s)}},n=e=>e.done?l(e.value):Promise.resolve(e.value).then(i,r);n((a=a.apply(e,s)).next())});import{r as o,j as m,F as h}from"./components-core-Bxru5Fab.js";import{D as u}from"./duplicate-detection-DgkP5tI1.js";import{a as p}from"./utils-hH7Twb46.js";const f=new class{constructor(){this.consent=!1,this.events=[]}setConsent(e){this.consent=e}trackEvent(e,s={}){if(!this.consent)return;const a={name:e,properties:s,timestamp:(new Date).toISOString(),sessionId:this.getSessionId()};this.events.push(a),window.gtag&&window.gtag("event",e,s)}trackPageView(e){this.trackEvent("page_view",{page:e})}trackError(e,s={}){this.trackEvent("error",{message:e.message,stack:e.stack,context:s})}getSessionId(){let e=sessionStorage.getItem("analytics_session_id");return e||(e="session_"+Date.now()+"_"+Math.random().toString(36).substr(2,9),sessionStorage.setItem("analytics_session_id",e)),e}getEvents(){return this.events}};const x=o.forwardRef(({onFetchFolderFiles:e,onDeleteFiles:s},a)=>{const[l,t]=o.useState([]),[i,r]=o.useState({}),[p,x]=o.useState([]),[g,j]=o.useState(new Set),[v,N]=o.useState({exact:!0,similar:!0,size:!0,hash:!1}),[y,b]=o.useState(!1),[S,F]=o.useState(!1),[w,D]=o.useState(!1),[k,C]=o.useState({current:0,total:0,fileName:""}),[M,z]=o.useState(!1),[T,_]=o.useState({current:0,total:0,folderName:""}),[P,E]=o.useState("newest"),[O,I]=o.useState("name"),[$,A]=o.useState("asc"),[B,R]=o.useState(""),[L,K]=o.useState(""),[J,W]=o.useState(""),G=o.useMemo(()=>new u,[]);o.useEffect(()=>{try{const e=localStorage.getItem("multiFolderDuplicateManager_detectionMethods");if(e){const s=JSON.parse(e);N(s)}const s=localStorage.getItem("multiFolderDuplicateManager_keepStrategy");s&&E(s)}catch(e){}},[]),o.useEffect(()=>{localStorage.setItem("multiFolderDuplicateManager_detectionMethods",JSON.stringify(v))},[v]),o.useEffect(()=>{localStorage.setItem("multiFolderDuplicateManager_keepStrategy",P)},[P]),o.useEffect(()=>{try{const e=localStorage.getItem("multiFolderDuplicateManager_sortBy");e&&I(e);const s=localStorage.getItem("multiFolderDuplicateManager_sortOrder");s&&A(s)}catch(e){}},[]),o.useEffect(()=>{localStorage.setItem("multiFolderDuplicateManager_sortBy",O)},[O]),o.useEffect(()=>{localStorage.setItem("multiFolderDuplicateManager_sortOrder",$)},[$]);const V=o.useCallback((s,a="",l=0,t=10)=>d(null,null,function*(){try{if(l>t)return[];const i=yield e(s.id),r=[],o=a?`${a}/${s.name}`:s.name,m=i.filter(e=>e.folder),h=i.filter(e=>!e.folder).map(e=>c(n({},e),{folderPath:o,parentFolderId:s.id,depth:l,fullPath:`${o}/${e.name}`}));r.push(...h);const u=m.map(e=>()=>d(null,null,function*(){return yield V(e,o,l+1,t)}));if(u.length>0){const e=yield function(e,s=5){return d(this,null,function*(){const a=[];let l=0;const t=[],i=()=>d(null,null,function*(){if(l===e.length)return;const r=e[l++]();a.push(r);const n=r.then(()=>t.splice(t.indexOf(n),1));t.push(n);let c=Promise.resolve();return t.length>=s&&(c=Promise.race(t)),yield c,i()});return yield i(),Promise.allSettled(a)})}(u,5);for(const s of e)"fulfilled"===s.status&&Array.isArray(s.value)&&r.push(...s.value)}return yield new Promise(e=>setTimeout(e,0)),r}catch(i){return[]}}),[e]);o.useEffect(()=>{const e=localStorage.getItem("multiFolderDuplicateManager_selectedFolders");if(e)try{const s=JSON.parse(e);t(s),s.forEach(e=>{V(e)})}catch(s){}},[]),o.useEffect(()=>{const e=localStorage.getItem("pendingComparisonFolders");if(e)try{const s=JSON.parse(e);setTimeout(()=>{s.forEach(e=>{l.find(s=>s.id===e.id)||U(e)}),localStorage.removeItem("pendingComparisonFolders")},100)}catch(s){localStorage.removeItem("pendingComparisonFolders")}},[]),o.useEffect(()=>{localStorage.setItem("multiFolderDuplicateManager_selectedFolders",JSON.stringify(l))},[l]);const U=e=>d(null,null,function*(){if(!l.find(s=>s.id===e.id)){F(!0),_({current:0,total:1,folderName:e.name});try{const s=yield V(e);t(s=>[...s,e]),r(a=>c(n({},a),{[e.id]:{folder:e,files:s,totalFiles:s.length}}))}catch(s){alert(`Failed to load folder: ${s.message}`)}finally{F(!1),_({current:0,total:0,folderName:""})}}});o.useImperativeHandle(a,()=>({addFolder:U,checkPendingFolders:()=>{const e=localStorage.getItem("pendingComparisonFolders");if(e)try{JSON.parse(e).forEach(e=>{l.find(s=>s.id===e.id)||U(e)}),localStorage.removeItem("pendingComparisonFolders")}catch(s){localStorage.removeItem("pendingComparisonFolders")}}}));const H=o.useCallback(()=>{const e=[];return Object.values(i).forEach(({folder:s,files:a})=>{a.forEach(a=>{e.push(c(n({},a),{sourceFolder:s.name,sourceFolderId:s.id,fullPath:a.folderPath?`${s.name}/${a.folderPath}/${a.name}`:`${s.name}/${a.name}`}))})}),e},[i]),Y=(e,s)=>new Promise((a,l)=>{try{const t=new URL("/assets/duplicateDetectorWorker-B-xl384J.js",import.meta.url),i=new Worker(t,{type:"module"});i.onmessage=e=>{const{type:s,data:t}=e.data;switch(s){case"progress":_({current:t.current,total:t.total,folderName:t.message||"Processing duplicates..."});break;case"complete":i.terminate(),a(t);break;case"error":i.terminate(),l(new Error(t))}},i.onerror=e=>{i.terminate(),l(e)},i.postMessage({type:"detect_duplicates",data:{files:e,methods:s}})}catch(t){l(t)}}),q=(e,s)=>d(null,null,function*(){const a=new u;a.setProgressCallback((e,s,a)=>{_({current:e,total:s,folderName:a||"Processing duplicates..."}),e%1e3==0&&setTimeout(()=>{},0)});try{return yield a.findAllDuplicates(e,s)}catch(l){throw l}}),Q=()=>{const e=Array.from(g).map(e=>{for(const s of p){const a=s.files.find(s=>s.id===e);if(a)return a}return null}).filter(Boolean),s=e.reduce((e,s)=>e+s.size,0),a=new Set;return p.forEach((e,s)=>{e.files.some(e=>g.has(e.id))&&a.add(s)}),{selectedFiles:e.length,selectedSize:s,selectedGroups:a.size,totalGroups:p.length,totalDuplicateFiles:p.reduce((e,s)=>e+s.files.length,0)}},X=(e,s="newest")=>{if(e.files.length<=1)return null;return[...e.files].sort((e,a)=>{switch(s){case"newest":default:return new Date(a.lastModifiedDateTime)-new Date(e.lastModifiedDateTime);case"oldest":return new Date(e.lastModifiedDateTime)-new Date(a.lastModifiedDateTime);case"largest":return a.size-e.size;case"smallest":return e.size-a.size}})[0]},Z=e=>{O===e?A("asc"===$?"desc":"asc"):(I(e),A("asc"))},ee=e=>e.filter(e=>{if(B&&!e.fullPath.toLowerCase().includes(B.toLowerCase()))return!1;if(L){const s=L.match(/^([<>]?)(\d+(?:\.\d+)?)([KMGT]?B?)$/i);if(s){const[,a,l,t]=s,i=e.size;let r=parseFloat(l);switch(t.toUpperCase()){case"KB":r*=1024;break;case"MB":r*=1048576;break;case"GB":r*=1073741824;break;case"TB":r*=1099511627776}switch(a){case">":if(i<=r)return!1;break;case"<":if(i>=r)return!1;break;default:if(i!==r)return!1}}}if(J){const s=new Date(e.lastModifiedDateTime),a=new Date(J),l=new Date(s.getFullYear(),s.getMonth(),s.getDate()),t=new Date(a.getFullYear(),a.getMonth(),a.getDate());if(l.getTime()!==t.getTime())return!1}return!0}),se=()=>{R(""),K(""),W("")},ae=()=>{const e=p.reduce((e,s)=>[...e,...s.files],[]),s=ee(e);return{total:e.length,filtered:s.length,hidden:e.length-s.length}},le=e=>{switch(e){case"exact":return"Exact Match";case"similar":return"Similar Names";case"size":return"Same Size";case"hash":return"Hash Match";default:return e}},te=e=>{switch(e){case"exact":return"Files with identical names and sizes";case"similar":return"Files with similar names (80% similarity)";case"size":return"Files with identical sizes";case"hash":return"Files with identical content hashes";default:return""}};if(y){const e=T.total>0?Math.round(T.current/T.total*100):0;return m.jsx("div",{className:"multi-folder-duplicate-manager",children:m.jsxs("div",{className:"scanning-indicator",children:[m.jsxs("div",{className:"scanning-header",children:[m.jsx("div",{className:"spinner"}),m.jsx("h3",{children:"Scanning for Duplicates"})]}),m.jsxs("div",{className:"scanning-progress",children:[m.jsx("p",{className:"scanning-status",children:T.folderName}),m.jsxs("div",{className:"progress-container",children:[m.jsx("div",{className:"progress-bar",children:m.jsx("div",{className:"progress-fill",style:{width:`${e}%`}})}),m.jsxs("span",{className:"progress-text",children:[T.current," / ",T.total," (",e,"%)"]})]})]}),m.jsxs("div",{className:"scanning-stats",children:[m.jsxs("p",{children:["📁 Scanning ",l.length," folders"]}),m.jsx("p",{children:"📄 Analyzing files recursively"}),m.jsxs("p",{children:["🔍 Using detection methods: ",Object.keys(v).filter(e=>v[e]).join(", ")]})]}),m.jsx("button",{className:"cancel-scan-btn",onClick:()=>{window.confirm("Are you sure you want to cancel the scan?")&&(b(!1),_({current:0,total:0,folderName:""}))},children:"Cancel Scan"})]})})}if(w){const e=k.total>0?Math.round(k.current/k.total*100):0;return m.jsx("div",{className:"multi-folder-duplicate-manager",children:m.jsxs("div",{className:"scanning-indicator",children:[m.jsxs("div",{className:"scanning-header",children:[m.jsx("div",{className:"spinner"}),m.jsx("h3",{children:"Deleting Files"})]}),m.jsxs("div",{className:"scanning-progress",children:[m.jsx("p",{className:"scanning-status",children:k.fileName}),m.jsxs("div",{className:"progress-container",children:[m.jsx("div",{className:"progress-bar",children:m.jsx("div",{className:"progress-fill",style:{width:`${e}%`}})}),m.jsxs("span",{className:"progress-text",children:[k.current," / ",k.total," (",e,"%)"]})]})]}),m.jsxs("div",{className:"scanning-stats",children:[m.jsx("p",{children:"🗑️ Deleting duplicate files"}),m.jsx("p",{children:"📄 Processing files one by one"}),m.jsx("p",{children:"🔄 Will refresh page after completion"})]}),m.jsx("div",{className:"deletion-warning",children:m.jsx("p",{children:"⚠️ Please do not close this page during deletion"})})]})})}const ie=(()=>{const e=H(),s=e.reduce((e,s)=>e+s.size,0),a=l.map(e=>{const s=i[e.id],a=(null==s?void 0:s.files)||[],l=a.reduce((e,s)=>e+s.size,0),t=a.length>0?Math.max(...a.map(e=>e.depth||0)):0;return{name:e.name,fileCount:a.length,size:l,maxDepth:t}});return{totalFiles:e.length,totalSize:s,folderCount:l.length,folderStats:a}})();return m.jsxs("div",{className:"multi-folder-duplicate-manager",children:[m.jsxs("div",{className:"manager-header",children:[m.jsx("h2",{children:"Multi-Folder Duplicate Finder"}),m.jsx("p",{children:"Select multiple folders to find duplicates across them (including subfolders)"})]}),m.jsxs("div",{className:"folder-selection",children:[m.jsxs("div",{className:"folder-selection-header",children:[m.jsxs("h3",{children:["Selected Folders (",l.length,")"]}),m.jsxs("div",{className:"folder-actions",children:[m.jsx("button",{className:"add-folder-btn",onClick:()=>z(!0),disabled:S,children:S?"Loading...":"+ Add Folder"}),l.length>0&&m.jsx("button",{className:"clear-folders-btn",onClick:()=>{window.confirm("Are you sure you want to clear all saved folder selections and preferences?")&&(t([]),r({}),j(new Set),x([]),localStorage.removeItem("multiFolderDuplicateManager_selectedFolders"),localStorage.removeItem("multiFolderDuplicateManager_detectionMethods"),localStorage.removeItem("multiFolderDuplicateManager_keepStrategy"),localStorage.removeItem("multiFolderDuplicateManager_sortBy"),localStorage.removeItem("multiFolderDuplicateManager_sortOrder"),localStorage.removeItem("folderSelector_state"),N({exact:!0,similar:!0,size:!0,hash:!1}),E("newest"),I("name"),A("asc"),R(""),K(""),W(""))},title:"Clear all saved folder selections",children:"Clear All"})]})]}),S&&T.total>0&&m.jsxs("div",{className:"scan-progress",children:[m.jsxs("p",{children:["Scanning: ",T.folderName]}),m.jsx("div",{className:"progress-bar",children:m.jsx("div",{className:"progress-fill",style:{width:T.current/T.total*100+"%"}})})]}),m.jsx("div",{className:"selected-folders",children:l.map(e=>{var s;return m.jsxs("div",{className:"selected-folder",children:[m.jsxs("span",{className:"folder-name",children:["📁 ",e.name]}),m.jsxs("span",{className:"folder-file-count",children:[(null==(s=i[e.id])?void 0:s.totalFiles)||0," files (recursive)"]}),m.jsx("button",{className:"remove-folder-btn",onClick:()=>{return s=e.id,t(e=>e.filter(e=>e.id!==s)),void r(e=>{const a=n({},e);return delete a[s],a});var s},title:"Remove folder",children:"×"})]},e.id)})}),l.length<2&&m.jsx("p",{className:"folder-hint",children:"Select at least 2 folders to start comparing for duplicates"})]}),l.length>=2&&m.jsxs(m.Fragment,{children:[m.jsxs("div",{className:"folder-summary",children:[m.jsxs("div",{className:"summary-item",children:[m.jsx("span",{className:"summary-label",children:"Total Folders:"}),m.jsx("span",{className:"summary-value",children:ie.folderCount})]}),m.jsxs("div",{className:"summary-item",children:[m.jsx("span",{className:"summary-label",children:"Total Files (Recursive):"}),m.jsx("span",{className:"summary-value",children:ie.totalFiles})]}),m.jsxs("div",{className:"summary-item",children:[m.jsx("span",{className:"summary-label",children:"Total Size:"}),m.jsx("span",{className:"summary-value",children:G.formatFileSize(ie.totalSize)})]})]}),m.jsxs("div",{className:"folder-details",children:[m.jsx("h3",{children:"Folder Details:"}),m.jsx("div",{className:"folder-stats-grid",children:ie.folderStats.map((e,s)=>m.jsxs("div",{className:"folder-stat-item",children:[m.jsx("div",{className:"folder-stat-header",children:m.jsxs("span",{className:"folder-stat-name",children:["📁 ",e.name]})}),m.jsxs("div",{className:"folder-stat-details",children:[m.jsxs("span",{className:"folder-stat-count",children:[e.fileCount," files"]}),m.jsx("span",{className:"folder-stat-size",children:G.formatFileSize(e.size)}),e.maxDepth>0&&m.jsxs("span",{className:"folder-stat-depth",children:["Max depth: ",e.maxDepth]})]})]},s))})]}),m.jsxs("div",{className:"detection-methods",children:[m.jsx("h3",{children:"Detection Methods:"}),Object.entries(v).map(([e,s])=>m.jsxs("label",{className:"method-checkbox",children:[m.jsx("input",{type:"checkbox",checked:s,onChange:s=>N(a=>c(n({},a),{[e]:s.target.checked}))}),le(e)]},e))]}),m.jsxs("div",{className:"scan-controls",children:[m.jsx("button",{className:"scan-button primary",onClick:()=>d(null,null,function*(){if(0!==l.length){b(!0),_({current:0,total:1,folderName:"Initializing..."}),f.trackEvent("duplicate_scan_started",{folderCount:l.length,detectionMethods:Object.keys(v).filter(e=>v[e])});try{const a=[];let t=0;for(let s=0;s<l.length;s++){const i=l[s];_({current:s,total:l.length,folderName:`Loading ${i.name}...`});try{const e=yield V(i);a.push(...e),t+=e.length,r(s=>c(n({},s),{[i.id]:{folder:i,files:e,totalFiles:e.length}})),_({current:s+1,total:l.length,folderName:`Loaded ${i.name} (${e.length} files)`}),yield new Promise(e=>setTimeout(e,0))}catch(e){f.trackError(e,{action:"load_folder_files",folderName:i.name})}}if(0===a.length)return x([]),void j(new Set);_({current:0,total:a.length,folderName:"Analyzing files for duplicates..."});const i=Object.keys(v).filter(e=>v[e]).map(e=>{switch(e){case"exact":return"exact";case"similar":return"similar";case"size":return"size";case"hash":return"hash";default:return null}}).filter(Boolean);let d;if(a.length>1e4&&"undefined"!=typeof Worker)try{_({current:0,total:a.length,folderName:"Starting Web Worker for duplicate detection..."}),d=yield Y(a,i)}catch(s){_({current:0,total:a.length,folderName:"Web Worker failed, using main thread..."}),d=yield q(a,i)}else _({current:0,total:a.length,folderName:"Processing duplicates in main thread..."}),d=yield q(a,i);x(d),j(new Set),f.trackEvent("duplicate_scan_completed",{totalFiles:a.length,duplicateGroups:d.length,totalDuplicates:d.reduce((e,s)=>e+s.files.length,0),detectionMethods:i,usedWorker:a.length>1e4}),_({current:a.length,total:a.length,folderName:`Found ${d.length} duplicate groups`})}catch(e){f.trackError(e,{action:"scan_duplicates"}),alert(`Error scanning for duplicates: ${e.message}. Please try again.`)}finally{b(!1),_({current:0,total:0,folderName:""})}}else alert("Please select at least one folder to scan.")}),disabled:y||0===Object.keys(v).filter(e=>v[e]).length,title:0===Object.keys(v).filter(e=>v[e]).length?"Please select at least one detection method":"Start scanning for duplicates across all selected folders",children:y?"🔄 Scanning...":"🔍 Scan for Duplicates"}),0===Object.keys(v).filter(e=>v[e]).length&&m.jsx("p",{className:"scan-hint",children:"Please select at least one detection method to start scanning"})]}),m.jsxs("div",{className:"filtering-controls",children:[m.jsxs("div",{className:"filter-header",children:[m.jsx("h3",{children:"Filter & Sort Options"}),m.jsx("button",{className:"clear-filters-btn",onClick:se,disabled:!B&&!L&&!J,children:"🗑️ Clear Filters"})]}),m.jsxs("div",{className:"filter-inputs",children:[m.jsxs("div",{className:"filter-group",children:[m.jsx("label",{className:"filter-label",children:"📁 Folder Path:"}),m.jsx("input",{type:"text",value:B,onChange:e=>R(e.target.value),placeholder:"Enter folder path to filter...",className:"filter-input"})]}),m.jsxs("div",{className:"filter-group",children:[m.jsx("label",{className:"filter-label",children:"📏 File Size:"}),m.jsx("input",{type:"text",value:L,onChange:e=>K(e.target.value),placeholder:"e.g., >10MB, <1GB, 5MB",className:"filter-input"})]}),m.jsxs("div",{className:"filter-group",children:[m.jsx("label",{className:"filter-label",children:"📅 Date Modified:"}),m.jsx("input",{type:"date",value:J,onChange:e=>W(e.target.value),className:"filter-input"})]})]}),m.jsx("div",{className:"filter-summary",children:m.jsxs("span",{className:"filter-info",children:["Showing ",ae().filtered," of ",ae().total," files",ae().hidden>0&&m.jsxs("span",{className:"filter-hidden",children:[" (",ae().hidden," hidden)"]})]})})]}),m.jsxs("div",{className:"enhanced-summary-bar",children:[m.jsxs("div",{className:"summary-stats",children:[m.jsxs("div",{className:"summary-stat-item",children:[m.jsx("span",{className:"stat-label",children:"Duplicate Groups:"}),m.jsx("span",{className:"stat-value",children:p.length})]}),m.jsxs("div",{className:"summary-stat-item",children:[m.jsx("span",{className:"stat-label",children:"Total Duplicate Files:"}),m.jsx("span",{className:"stat-value",children:Q().totalDuplicateFiles})]}),m.jsxs("div",{className:"summary-stat-item",children:[m.jsx("span",{className:"stat-label",children:"Selected Files:"}),m.jsx("span",{className:"stat-value",children:Q().selectedFiles})]}),m.jsxs("div",{className:"summary-stat-item",children:[m.jsx("span",{className:"stat-label",children:"Space to Free:"}),m.jsx("span",{className:"stat-value highlight",children:G.formatFileSize(Q().selectedSize)})]}),p.length>0&&m.jsxs("div",{className:"summary-stat-item strategy-indicator",children:[m.jsx("span",{className:"stat-label",children:"Current Strategy:"}),m.jsxs("span",{className:"stat-value strategy-value",children:["newest"===P&&"🆕 Keep Newest","oldest"===P&&"📅 Keep Oldest","largest"===P&&"📏 Keep Largest","smallest"===P&&"📐 Keep Smallest"]})]})]}),m.jsxs("div",{className:"selection-controls",children:[m.jsxs("div",{className:"smart-selection-buttons",children:[m.jsx("button",{className:"smart-select-btn",onClick:()=>{E("newest");const e=new Set(g);p.forEach(s=>{[...s.files].sort((e,s)=>new Date(s.lastModifiedDateTime)-new Date(e.lastModifiedDateTime)).slice(1).forEach(s=>{e.add(s.id)})}),j(e)},title:"Keep newest file in each group, select others for deletion",children:"🆕 Keep Newest"}),m.jsx("button",{className:"smart-select-btn",onClick:()=>{E("oldest");const e=new Set(g);p.forEach(s=>{[...s.files].sort((e,s)=>new Date(e.lastModifiedDateTime)-new Date(s.lastModifiedDateTime)).slice(1).forEach(s=>{e.add(s.id)})}),j(e)},title:"Keep oldest file in each group, select others for deletion",children:"📅 Keep Oldest"}),m.jsx("button",{className:"smart-select-btn",onClick:()=>{E("largest");const e=new Set(g);p.forEach(s=>{[...s.files].sort((e,s)=>s.size-e.size).slice(1).forEach(s=>{e.add(s.id)})}),j(e)},title:"Keep largest file in each group, select others for deletion",children:"📏 Keep Largest"}),m.jsx("button",{className:"smart-select-btn",onClick:()=>{E("smallest");const e=new Set(g);p.forEach(s=>{[...s.files].sort((e,s)=>e.size-s.size).slice(1).forEach(s=>{e.add(s.id)})}),j(e)},title:"Keep smallest file in each group, select others for deletion",children:"📐 Keep Smallest"})]}),m.jsxs("div",{className:"bulk-selection-buttons",children:[m.jsx("button",{className:"bulk-select-btn",onClick:()=>{const e=new Set;p.forEach(s=>{s.files.forEach(s=>{e.add(s.id)})}),j(e)},title:"Select all duplicate files for deletion",children:"☑️ Select All"}),m.jsx("button",{className:"bulk-select-btn",onClick:()=>{j(new Set)},title:"Deselect all files",children:"☐ Deselect All"}),m.jsx("button",{className:"bulk-select-btn",onClick:()=>{const e=new Set;p.forEach(s=>{s.files.forEach(s=>{e.add(s.id)})});const s=new Set;e.forEach(e=>{g.has(e)||s.add(e)}),j(s)},title:"Invert current selection",children:"↕️ Invert Selection"})]})]}),Q().selectedFiles>0&&m.jsx("div",{className:"delete-section",children:m.jsxs("button",{className:"delete-button primary",onClick:()=>d(null,null,function*(){if(0===g.size)return;const e=H(),a=Array.from(g).map(s=>e.find(e=>e.id===s)).filter(Boolean),t=a.reduce((e,s)=>e+s.size,0);if(window.confirm(`Are you sure you want to delete ${a.length} files? This will free up ${G.formatFileSize(t)} of space.`)){D(!0),C({current:0,total:a.length,fileName:""});try{const e=yield s(a,(e,s,a)=>{C({current:e,total:s,fileName:a})});j(new Set),alert(`Successfully deleted ${e.length} files and freed ${G.formatFileSize(t)} of space!`),C({current:a.length,total:a.length,fileName:"Refreshing folders..."});const i=l.map(e=>d(null,null,function*(){try{const s=yield V(e);r(a=>c(n({},a),{[e.id]:{folder:e,files:s,totalFiles:s.length}}))}catch(s){}}));yield Promise.all(i),window.location.reload()}catch(i){alert(`Error deleting files: ${i.message}`)}finally{D(!1),C({current:0,total:0,fileName:""})}}}),title:`Delete ${Q().selectedFiles} files and free ${G.formatFileSize(Q().selectedSize)} of space`,children:["🗑️ Delete Selected Files (",Q().selectedFiles,")"]})})]}),m.jsxs("div",{className:"duplicate-groups",children:[p.map((e,s)=>{var a;const l=ee(e.files),t=(i=l,[...i].sort((e,s)=>{let a,l;switch(O){case"name":default:a=e.name.toLowerCase(),l=s.name.toLowerCase();break;case"size":a=e.size,l=s.size;break;case"date":a=new Date(e.lastModifiedDateTime),l=new Date(s.lastModifiedDateTime);break;case"folder":a=e.fullPath.toLowerCase(),l=s.fullPath.toLowerCase();break;case"depth":a=e.depth||0,l=s.depth||0}return"asc"===$?a>l?1:-1:a<l?1:-1}));var i;return 0===t.length?null:m.jsxs("div",{className:"duplicate-group",children:[m.jsxs("div",{className:"group-header",children:[m.jsxs("div",{className:"group-info",children:[m.jsx("h3",{children:le(e.method)}),m.jsx("p",{children:te(e.method)}),m.jsxs("p",{children:[e.files.length," files • ",G.formatFileSize(e.totalSize)]}),e.files.length>1&&m.jsxs("div",{className:"keeper-info",children:[m.jsxs("span",{className:"keeper-label",children:["💾 Keeper (",P,"):"]}),m.jsx("span",{className:"keeper-file",children:null==(a=X(e,P))?void 0:a.name})]})]}),m.jsxs("label",{className:"group-select",children:[m.jsx("input",{type:"checkbox",checked:e.files.every(e=>g.has(e.id)),onChange:e=>((e,s)=>{const a=new Set(g);p[e].files.forEach(e=>{s?a.add(e.id):a.delete(e.id)}),j(a)})(s,e.target.checked)}),"Select All"]})]}),m.jsxs("div",{className:"file-list-header",children:[m.jsxs("div",{className:"header-cell sortable",onClick:()=>Z("name"),children:[m.jsx("span",{children:"File Name"}),"name"===O&&m.jsx("span",{className:"sort-indicator",children:"asc"===$?"↑":"↓"})]}),m.jsxs("div",{className:"header-cell sortable",onClick:()=>Z("folder"),children:[m.jsx("span",{children:"Folder Path"}),"folder"===O&&m.jsx("span",{className:"sort-indicator",children:"asc"===$?"↑":"↓"})]}),m.jsxs("div",{className:"header-cell sortable",onClick:()=>Z("size"),children:[m.jsx("span",{children:"Size"}),"size"===O&&m.jsx("span",{className:"sort-indicator",children:"asc"===$?"↑":"↓"})]}),m.jsxs("div",{className:"header-cell sortable",onClick:()=>Z("date"),children:[m.jsx("span",{children:"Date Modified"}),"date"===O&&m.jsx("span",{className:"sort-indicator",children:"asc"===$?"↑":"↓"})]}),m.jsxs("div",{className:"header-cell sortable",onClick:()=>Z("depth"),children:[m.jsx("span",{children:"Depth"}),"depth"===O&&m.jsx("span",{className:"sort-indicator",children:"asc"===$?"↑":"↓"})]}),m.jsx("div",{className:"header-cell",children:m.jsx("span",{children:"Select"})})]}),m.jsx("div",{className:"file-list",children:t.map(e=>m.jsxs("div",{className:"file-item "+(g.has(e.id)?"selected":""),title:`File: ${e.name}\nPath: ${e.fullPath}\nSize: ${G.formatFileSize(e.size)}\nModified: ${new Date(e.lastModifiedDateTime).toLocaleString()}\nDepth: ${e.depth} levels deep`,children:[m.jsx("div",{className:"file-cell file-name",children:e.name}),m.jsxs("div",{className:"file-cell file-folder",style:{paddingLeft:20*e.depth+8+"px"},children:["📁 ",e.fullPath]}),m.jsx("div",{className:"file-cell file-size",children:G.formatFileSize(e.size)}),m.jsx("div",{className:"file-cell file-date",children:new Date(e.lastModifiedDateTime).toLocaleDateString()}),m.jsx("div",{className:"file-cell file-depth",children:e.depth}),m.jsx("div",{className:"file-cell file-select",children:m.jsx("label",{className:"file-select-label",children:m.jsx("input",{type:"checkbox",checked:g.has(e.id),onChange:s=>((e,s)=>{const a=new Set(g);s?a.add(e):a.delete(e),j(a)})(e.id,s.target.checked)})})})]},e.id))})]},s)}),p.length>0&&p.every(e=>0===ee(e.files).length)&&m.jsxs("div",{className:"no-files-message",children:[m.jsx("p",{children:"No files match the current filters."}),m.jsx("button",{className:"clear-filters-btn small",onClick:se,children:"Clear Filters"})]})]}),0===p.length&&m.jsxs("div",{className:"no-duplicates",children:[m.jsx("p",{children:"No duplicate files found across the selected folders."}),m.jsx("p",{children:"Try selecting different folders or adjusting the detection methods."})]})]}),M&&m.jsx(h,{onFetchFolderFiles:e,onFolderSelect:e=>{U(e)},onClose:()=>z(!1)})]})}),g=Object.freeze(Object.defineProperty({__proto__:null,default:x},Symbol.toStringTag,{value:"Module"})),j=Object.freeze(Object.defineProperty({__proto__:null,default:({files:e,onOrganize:s})=>{var a,l;const[t,i]=o.useState([]),[r,n]=o.useState({}),[c,h]=o.useState(null);o.useEffect(()=>{e.length>0&&u()},[e]);const u=()=>{const s={totalFiles:e.length,totalSize:e.reduce((e,s)=>e+s.size,0),fileTypes:{},oldFiles:[],largeFiles:[],potentialDuplicates:[],unusedFiles:[],organizationSuggestions:[]};e.forEach(e=>{const a=f(e.name);s.fileTypes[a]||(s.fileTypes[a]={count:0,totalSize:0}),s.fileTypes[a].count++,s.fileTypes[a].totalSize+=e.size;const l=new Date(e.lastModifiedDateTime),t=new Date;t.setFullYear(t.getFullYear()-1),l<t&&s.oldFiles.push(e),e.size>104857600&&s.largeFiles.push(e)}),p(s),n(s)},p=e=>{const s=[];e.oldFiles.length>10&&s.push({type:"storage_optimization",title:"Archive Old Files",description:`${e.oldFiles.length} files haven't been accessed in over a year`,impact:"High",potentialSavings:e.oldFiles.reduce((e,s)=>e+s.size,0),action:"archive_old_files"}),e.largeFiles.length>0&&s.push({type:"storage_optimization",title:"Large File Management",description:`${e.largeFiles.length} files are larger than 100MB`,impact:"Medium",potentialSavings:e.largeFiles.reduce((e,s)=>e+s.size,0),action:"review_large_files"});const a=Object.entries(e.fileTypes).sort(([,e],[,s])=>s.count-e.count).slice(0,5);a.length>0&&s.push({type:"organization",title:"Create Type-Based Folders",description:`Organize ${a.length} file types into dedicated folders`,impact:"Medium",action:"create_type_folders",fileTypes:a}),s.push({type:"prevention",title:"Set Up Auto-Duplicate Detection",description:"Automatically detect duplicates as you add new files",impact:"High",action:"setup_auto_detection"}),i(s)},f=e=>e.split(".").pop().toLowerCase(),x=e=>{if(0===e)return"0 Bytes";const s=Math.floor(Math.log(e)/Math.log(1024));return parseFloat((e/Math.pow(1024,s)).toFixed(2))+" "+["Bytes","KB","MB","GB"][s]};return m.jsxs("div",{className:"smart-organizer",children:[m.jsxs("div",{className:"organizer-header",children:[m.jsx("h2",{children:"🧠 Smart File Organizer"}),m.jsx("p",{children:"AI-powered recommendations to optimize your OneDrive storage"})]}),m.jsxs("div",{className:"file-insights",children:[m.jsx("h3",{children:"📊 Storage Insights"}),m.jsxs("div",{className:"insights-grid",children:[m.jsxs("div",{className:"insight-card",children:[m.jsx("div",{className:"insight-value",children:r.totalFiles||0}),m.jsx("div",{className:"insight-label",children:"Total Files"})]}),m.jsxs("div",{className:"insight-card",children:[m.jsx("div",{className:"insight-value",children:x(r.totalSize||0)}),m.jsx("div",{className:"insight-label",children:"Total Size"})]}),m.jsxs("div",{className:"insight-card",children:[m.jsx("div",{className:"insight-value",children:(null==(a=r.oldFiles)?void 0:a.length)||0}),m.jsx("div",{className:"insight-label",children:"Old Files (>1 year)"})]}),m.jsxs("div",{className:"insight-card",children:[m.jsx("div",{className:"insight-value",children:(null==(l=r.largeFiles)?void 0:l.length)||0}),m.jsx("div",{className:"insight-label",children:"Large Files (>100MB)"})]})]})]}),m.jsxs("div",{className:"recommendations",children:[m.jsx("h3",{children:"💡 Smart Recommendations"}),m.jsx("div",{className:"recommendations-list",children:t.map((s,a)=>m.jsxs("div",{className:"recommendation-card",children:[m.jsxs("div",{className:"recommendation-header",children:[m.jsx("h4",{children:s.title}),m.jsxs("span",{className:`impact-badge ${s.impact}`,children:[s.impact," Impact"]})]}),m.jsx("p",{children:s.description}),s.potentialSavings&&m.jsxs("p",{className:"savings",children:["Potential savings: ",x(s.potentialSavings)]}),m.jsx("button",{className:"action-btn",onClick:()=>(s=>{const a={type:s.type,title:s.title,steps:[],estimatedTime:0,filesToProcess:[]};switch(s.action){case"archive_old_files":a.steps=['Create "Archive" folder',"Move old files to archive","Compress archive folder","Set up auto-archive rules"],a.estimatedTime=Math.ceil(r.oldFiles.length/10),a.filesToProcess=r.oldFiles;break;case"create_type_folders":a.steps=["Create folder structure","Move files by type","Update file references","Verify organization"],a.estimatedTime=Math.ceil(e.length/20),a.filesToProcess=e;break;case"review_large_files":a.steps=["Analyze large files","Identify compression opportunities","Consider cloud storage for large files","Create backup before compression"],a.estimatedTime=2*r.largeFiles.length,a.filesToProcess=r.largeFiles}h(a)})(s),children:"Create Plan"})]},a))})]}),c&&m.jsxs("div",{className:"organization-plan",children:[m.jsx("h3",{children:"📋 Organization Plan"}),m.jsxs("div",{className:"plan-details",children:[m.jsx("h4",{children:c.title}),m.jsx("div",{className:"plan-steps",children:c.steps.map((e,s)=>m.jsxs("div",{className:"plan-step",children:[m.jsx("span",{className:"step-number",children:s+1}),m.jsx("span",{className:"step-text",children:e})]},s))}),m.jsxs("div",{className:"plan-metrics",children:[m.jsxs("p",{children:["Files to process: ",c.filesToProcess.length]}),m.jsxs("p",{children:["Estimated time: ",c.estimatedTime," minutes"]})]}),m.jsxs("div",{className:"plan-actions",children:[m.jsx("button",{className:"execute-btn",onClick:()=>d(null,null,function*(){if(c)try{yield s(c),analytics.trackEvent("file_organization_completed",{planType:c.type,filesProcessed:c.filesToProcess.length,estimatedTime:c.estimatedTime}),h(null)}catch(e){}}),children:"Execute Plan"}),m.jsx("button",{className:"cancel-btn",onClick:()=>h(null),children:"Cancel"})]})]})]})]})}},Symbol.toStringTag,{value:"Module"})),v=Object.freeze(Object.defineProperty({__proto__:null,default:({files:e,onShare:s,onCollaborate:a})=>{var l;const[t,i]=o.useState([]),[r,h]=o.useState([]),[u,p]=o.useState([]),[f,x]=o.useState({});o.useEffect(()=>{g()},[]);const g=()=>d(null,null,function*(){const e=[{id:"1",name:"John Doe",email:"john@company.com",role:"admin",avatar:"👨‍💼"},{id:"2",name:"Jane Smith",email:"jane@company.com",role:"member",avatar:"👩‍💼"},{id:"3",name:"Bob Wilson",email:"bob@company.com",role:"member",avatar:"👨‍💻"}],s=[{id:"1",name:"Marketing Assets",owner:"John Doe",members:3,files:150,duplicates:12},{id:"2",name:"Project Documents",owner:"Jane Smith",members:5,files:89,duplicates:8}];i(e),h(s),j(e,s)}),j=(e,s)=>{const a={totalMembers:e.length,totalSharedFolders:s.length,totalFiles:s.reduce((e,s)=>e+s.files,0),totalDuplicates:s.reduce((e,s)=>e+s.duplicates,0),potentialSavings:s.reduce((e,s)=>e+1024*s.duplicates*1024,0),collaborationOpportunities:[]};a.totalDuplicates>10&&a.collaborationOpportunities.push({type:"bulk_cleanup",title:"Team Duplicate Cleanup",description:`${a.totalDuplicates} duplicates found across team folders`,impact:"High",participants:e.length}),s.length>1&&a.collaborationOpportunities.push({type:"cross_folder_analysis",title:"Cross-Folder Duplicate Detection",description:"Find duplicates across multiple team folders",impact:"Medium",participants:e.length}),x(a)},v=e=>{if(0===e)return"0 Bytes";const s=Math.floor(Math.log(e)/Math.log(1024));return parseFloat((e/Math.pow(1024,s)).toFixed(2))+" "+["Bytes","KB","MB","GB"][s]};return m.jsxs("div",{className:"collaborative-manager",children:[m.jsxs("div",{className:"collaborative-header",children:[m.jsx("h2",{children:"👥 Team Duplicate Manager"}),m.jsx("p",{children:"Collaborate with your team to find and manage duplicates across shared folders"})]}),m.jsxs("div",{className:"team-overview",children:[m.jsx("h3",{children:"📊 Team Overview"}),m.jsxs("div",{className:"team-stats",children:[m.jsxs("div",{className:"stat-card",children:[m.jsx("div",{className:"stat-value",children:f.totalMembers||0}),m.jsx("div",{className:"stat-label",children:"Team Members"})]}),m.jsxs("div",{className:"stat-card",children:[m.jsx("div",{className:"stat-value",children:f.totalSharedFolders||0}),m.jsx("div",{className:"stat-label",children:"Shared Folders"})]}),m.jsxs("div",{className:"stat-card",children:[m.jsx("div",{className:"stat-value",children:f.totalFiles||0}),m.jsx("div",{className:"stat-label",children:"Total Files"})]}),m.jsxs("div",{className:"stat-card",children:[m.jsx("div",{className:"stat-value",children:f.totalDuplicates||0}),m.jsx("div",{className:"stat-label",children:"Duplicates Found"})]})]})]}),m.jsxs("div",{className:"team-members",children:[m.jsx("h3",{children:"👤 Team Members"}),m.jsx("div",{className:"members-grid",children:t.map(e=>m.jsxs("div",{className:"member-card",children:[m.jsx("div",{className:"member-avatar",children:e.avatar}),m.jsxs("div",{className:"member-info",children:[m.jsx("h4",{children:e.name}),m.jsx("p",{children:e.email}),m.jsx("span",{className:`role-badge ${e.role}`,children:e.role})]})]},e.id))})]}),m.jsxs("div",{className:"shared-folders",children:[m.jsx("h3",{children:"📁 Shared Folders"}),m.jsx("div",{className:"folders-grid",children:r.map(e=>m.jsxs("div",{className:"folder-card",children:[m.jsxs("div",{className:"folder-header",children:[m.jsx("h4",{children:e.name}),m.jsxs("span",{className:"owner-badge",children:["Owner: ",e.owner]})]}),m.jsxs("div",{className:"folder-stats",children:[m.jsxs("div",{className:"folder-stat",children:[m.jsx("span",{className:"stat-label",children:"Members:"}),m.jsx("span",{className:"stat-value",children:e.members})]}),m.jsxs("div",{className:"folder-stat",children:[m.jsx("span",{className:"stat-label",children:"Files:"}),m.jsx("span",{className:"stat-value",children:e.files})]}),m.jsxs("div",{className:"folder-stat",children:[m.jsx("span",{className:"stat-label",children:"Duplicates:"}),m.jsx("span",{className:"stat-value highlight",children:e.duplicates})]})]}),m.jsx("button",{className:"analyze-btn",children:"Analyze Duplicates"})]},e.id))})]}),m.jsxs("div",{className:"collaboration-opportunities",children:[m.jsx("h3",{children:"🤝 Collaboration Opportunities"}),m.jsx("div",{className:"opportunities-list",children:null==(l=f.collaborationOpportunities)?void 0:l.map((e,s)=>m.jsxs("div",{className:"opportunity-card",children:[m.jsxs("div",{className:"opportunity-header",children:[m.jsx("h4",{children:e.title}),m.jsxs("span",{className:`impact-badge ${e.impact}`,children:[e.impact," Impact"]})]}),m.jsx("p",{children:e.description}),m.jsxs("div",{className:"opportunity-metrics",children:[m.jsxs("span",{children:["Participants: ",e.participants]}),"bulk_cleanup"===e.type&&m.jsxs("span",{children:["Potential Savings: ",v(f.potentialSavings||0)]})]}),m.jsx("button",{className:"collaborate-btn",onClick:()=>(e=>d(null,null,function*(){try{const s={id:Date.now().toString(),type:e.type,title:e.title,status:"pending",participants:t.map(e=>c(n({},e),{status:"invited"})),createdAt:(new Date).toISOString()};p(e=>[...e,s]),analytics.trackEvent("collaboration_requested",{type:e.type,participantCount:e.participants}),null==a||a(s)}catch(s){}}))(e),children:"Start Collaboration"})]},s))})]}),u.length>0&&m.jsxs("div",{className:"active-collaborations",children:[m.jsx("h3",{children:"🔄 Active Collaborations"}),m.jsx("div",{className:"collaborations-list",children:u.map(e=>m.jsxs("div",{className:"collaboration-card",children:[m.jsxs("div",{className:"collaboration-header",children:[m.jsx("h4",{children:e.title}),m.jsx("span",{className:`status-badge ${e.status}`,children:e.status})]}),m.jsxs("div",{className:"participants",children:[m.jsx("h5",{children:"Participants:"}),m.jsx("div",{className:"participants-list",children:e.participants.map(e=>m.jsxs("div",{className:"participant",children:[m.jsx("span",{children:e.avatar}),m.jsx("span",{children:e.name}),m.jsx("span",{className:`status ${e.status}`,children:e.status})]},e.id))})]})]},e.id))})]})]})}},Symbol.toStringTag,{value:"Module"})),N=Object.freeze(Object.defineProperty({__proto__:null,default:()=>{const[e,s]=o.useState(!1),[a,l]=o.useState(null),[t,i]=o.useState(""),[r,n]=o.useState(0),c=["Visual Similarity Detection","Content Analysis","Video Comparison","Confidence Scoring","Performance Metrics","Edge Cases"],h=()=>d(null,null,function*(){s(!0),l(null),n(0);try{const e=setInterval(()=>{n(s=>s>=90?(clearInterval(e),90):s+10)},500);c.forEach((e,s)=>{setTimeout(()=>{i(e)},1e3*s)});const s=yield p.runAllTests();clearInterval(e),n(100),l(s),window.analytics&&window.analytics.track("ai_tests_completed",{successRate:s.summary.successRate,averagePrecision:s.summary.averagePrecision,averageRecall:s.summary.averageRecall})}catch(e){l({error:e.message,summary:{successRate:0}})}finally{s(!1),i("")}}),u=e=>e>=.8?"high":e>=.6?"medium":"low";return m.jsxs("div",{className:"ai-test-runner",children:[m.jsxs("div",{className:"test-header",children:[m.jsx("h2",{children:"🤖 AI Feature Validation Tests"}),m.jsx("p",{children:"Comprehensive testing of AI-powered duplicate detection algorithms"})]}),!e&&!a&&m.jsxs("div",{className:"test-setup",children:[m.jsxs("div",{className:"test-info",children:[m.jsx("h3",{children:"Test Coverage"}),m.jsxs("ul",{children:[m.jsx("li",{children:"🖼️ Visual Similarity Detection (Images)"}),m.jsx("li",{children:"📄 Content Analysis (Documents)"}),m.jsx("li",{children:"🎥 Video Comparison (Videos)"}),m.jsx("li",{children:"🎯 Confidence Scoring Validation"}),m.jsx("li",{children:"⚡ Performance Metrics"}),m.jsx("li",{children:"🔍 Edge Cases & Error Handling"})]})]}),m.jsx("button",{className:"run-tests-btn",onClick:h,children:"🚀 Run AI Tests"})]}),e&&m.jsxs("div",{className:"test-progress",children:[m.jsxs("div",{className:"progress-header",children:[m.jsx("h3",{children:"Running AI Tests..."}),m.jsx("div",{className:"progress-bar",children:m.jsx("div",{className:"progress-fill",style:{width:`${r}%`}})}),m.jsxs("p",{className:"progress-text",children:[r,"% Complete"]})]}),t&&m.jsxs("div",{className:"current-test",children:[m.jsx("span",{className:"test-icon",children:"🔄"}),m.jsx("span",{className:"test-name",children:t})]})]}),a&&!e&&m.jsx("div",{className:"test-results",children:a.error?m.jsxs("div",{className:"error-message",children:[m.jsx("h3",{children:"❌ Test Execution Failed"}),m.jsx("p",{children:a.error}),m.jsx("button",{className:"retry-btn",onClick:h,children:"🔄 Retry Tests"})]}):m.jsxs(m.Fragment,{children:[m.jsxs("div",{className:"results-summary",children:[m.jsx("h3",{children:"📊 Test Results Summary"}),m.jsxs("div",{className:"summary-grid",children:[m.jsxs("div",{className:"summary-card",children:[m.jsxs("div",{className:"summary-value",children:[a.summary.successRate.toFixed(1),"%"]}),m.jsx("div",{className:"summary-label",children:"Success Rate"})]}),m.jsxs("div",{className:"summary-card",children:[m.jsxs("div",{className:"summary-value",children:[a.summary.averagePrecision.toFixed(1),"%"]}),m.jsx("div",{className:"summary-label",children:"Avg Precision"})]}),m.jsxs("div",{className:"summary-card",children:[m.jsxs("div",{className:"summary-value",children:[a.summary.averageRecall.toFixed(1),"%"]}),m.jsx("div",{className:"summary-label",children:"Avg Recall"})]}),m.jsxs("div",{className:"summary-card",children:[m.jsxs("div",{className:"summary-value",children:[a.summary.averageF1Score.toFixed(1),"%"]}),m.jsx("div",{className:"summary-label",children:"Avg F1 Score"})]})]})]}),m.jsxs("div",{className:"detailed-results",children:[m.jsx("h3",{children:"📋 Detailed Test Results"}),m.jsx("div",{className:"results-list",children:a.results.map((e,s)=>{return m.jsxs("div",{className:`result-item ${e.status.toLowerCase()}`,children:[m.jsxs("div",{className:"result-header",children:[m.jsx("span",{className:"result-status",children:(l=e.status,"PASSED"===l?"✅":"❌")}),m.jsx("span",{className:"result-name",children:e.testName}),m.jsx("span",{className:"result-time",children:new Date(e.timestamp).toLocaleTimeString()})]}),void 0!==e.precision&&m.jsxs("div",{className:"result-metrics",children:[m.jsxs("div",{className:"metric",children:[m.jsx("span",{className:"metric-label",children:"Precision:"}),m.jsxs("span",{className:`metric-value ${u(e.precision)}`,children:[(100*e.precision).toFixed(1),"%"]})]}),m.jsxs("div",{className:"metric",children:[m.jsx("span",{className:"metric-label",children:"Recall:"}),m.jsxs("span",{className:`metric-value ${u(e.recall)}`,children:[(100*e.recall).toFixed(1),"%"]})]}),m.jsxs("div",{className:"metric",children:[m.jsx("span",{className:"metric-label",children:"F1 Score:"}),m.jsxs("span",{className:`metric-value ${u(e.f1Score)}`,children:[(100*e.f1Score).toFixed(1),"%"]})]})]}),void 0!==e.processingTimeMs&&m.jsxs("div",{className:"result-metrics",children:[m.jsxs("div",{className:"metric",children:[m.jsx("span",{className:"metric-label",children:"Processing Time:"}),m.jsxs("span",{className:"metric-value "+(a=e.processingTimeMs,a<1e3?"excellent":a<3e3?"good":a<5e3?"acceptable":"poor"),children:[e.processingTimeMs.toFixed(0),"ms"]})]}),m.jsxs("div",{className:"metric",children:[m.jsx("span",{className:"metric-label",children:"Files/Second:"}),m.jsx("span",{className:"metric-value",children:e.filesPerSecond.toFixed(1)})]})]}),void 0!==e.passedTests&&m.jsx("div",{className:"result-metrics",children:m.jsxs("div",{className:"metric",children:[m.jsx("span",{className:"metric-label",children:"Tests Passed:"}),m.jsxs("span",{className:"metric-value",children:[e.passedTests,"/",e.totalTests]})]})}),e.error&&m.jsx("div",{className:"result-error",children:m.jsxs("span",{className:"error-text",children:["Error: ",e.error]})})]},s);var a,l})})]}),m.jsxs("div",{className:"test-actions",children:[m.jsx("button",{className:"retry-btn",onClick:h,children:"🔄 Run Tests Again"}),m.jsx("button",{className:"export-btn",onClick:()=>{const e=JSON.stringify(a,null,2),s=new Blob([e],{type:"application/json"}),l=URL.createObjectURL(s),t=document.createElement("a");t.href=l,t.download=`ai-test-results-${(new Date).toISOString().split("T")[0]}.json`,t.click()},children:"📥 Export Results"})]})]})})]})}},Symbol.toStringTag,{value:"Module"}));export{N as A,v as C,g as M,j as S,f as a};
